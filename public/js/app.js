(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.app = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"./src/js/app.js":[function(_dereq_,module,exports){
"use strict";

var _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };

//const test_url = "https://medium.com/playwell/no-mans-sky-and-the-beautiful-return-to-the-weird-81343f2aad37/";

var SuperSearchLine = (function () {
	function SuperSearchLine(superSearchLineNode) {
		_classCallCheck(this, SuperSearchLine);

		// Устанавливаем базовые переменные
		this.remote = "http://super-analytics.com/";

		this.id = superSearchLineNode.getAttribute("id");
		this.baseClass = "super-search-line";
		this.baseClassSelector = "." + this.baseClass;
		this.urlPattern = new RegExp(/(https?:\/\/)?((?:www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b)([-a-zA-Z0-9@:%_\+.~#?&//=]*)/);

		// Определяем элементы
		this.superSearchLineForm = superSearchLineNode.querySelector(this.baseClassSelector + "__form");
		this.superSearchLineInput = superSearchLineNode.querySelector(this.baseClassSelector + "__input");
		this.superSearchLineReset = superSearchLineNode.querySelector(this.baseClassSelector + "__reset");
		this.superSearchLineButton = superSearchLineNode.querySelector(this.baseClassSelector + "__button");
		// Навешиваем события
		this.superSearchLineInput.addEventListener("change", this.superSearchLineInputHandler.bind(this));
		this.superSearchLineInput.addEventListener("input", this.superSearchLineInputHandler.bind(this));
		this.superSearchLineReset.addEventListener("click", this.superSearchLineResetValue.bind(this));
		this.superSearchLineButton.addEventListener("click", this.superSearchLineSubmit.bind(this));
		this.superSearchLineForm.addEventListener("submit", this.superSearchLineSubmit.bind(this));

		// Создаем элементы для отображения результата

		// Создаем блоки для подсказок
		this.linkTextEl1 = document.createElement("div");
		this.linkTextEl2 = document.createElement("div");
		this.linkTextEl3 = document.createElement("div");
		this.linkTextEl1.classList.add("" + this.baseClass + "__link-text");
		this.linkTextEl2.classList.add("" + this.baseClass + "__link-text");
		this.linkTextEl3.classList.add("" + this.baseClass + "__link-text");

		// Создаем блоки поясняющего текста и сразу считаем ширину т.к. в дальнейшем не меняются
		this.helperEl1 = document.createElement("div");
		this.helperEl2 = document.createElement("div");
		this.helperEl3 = document.createElement("div");

		this.helperEl1.classList.add("" + this.baseClass + "__helper");
		this.helperEl2.classList.add("" + this.baseClass + "__helper");
		this.helperEl3.classList.add("" + this.baseClass + "__helper");

		this.helperEl1.innerHTML = "in <span class=\"" + this.baseClass + "__helper-type\">Phrase Overview</span>";
		this.helperEl2.innerHTML = "in <span class=\"" + this.baseClass + "__helper-type\">Domain Overview</span>";
		this.helperEl3.innerHTML = "in <span class=\"" + this.baseClass + "__helper-type\">URL Overview</span>";

		this.helperStr1Width = this.stringWidthInPX(this.helperEl1);
		this.helperStr2Width = this.stringWidthInPX(this.helperEl2);
		this.helperStr3Width = this.stringWidthInPX(this.helperEl3);
	}

	_createClass(SuperSearchLine, {
		parseUrl: {
			value: function parseUrl(url) {
				return this.urlPattern.test(url);
			}
		},
		superSearchLineResetValue: {
			value: function superSearchLineResetValue() {
				this.superSearchLineInput.value = null;
				//this.superSearchLineInput.change();
				this.superSearchLineReset.classList.add("hidden");
				this.superSearchLineButton.setAttribute("disabled", "disabled");
				var result = this.superSearchLineForm.querySelector(this.baseClassSelector + "__result");
				result && this.superSearchLineForm.removeChild(result);
				//console.log(this.superSearchLineInput.value);
			}
		},
		superSearchLineSubmit: {
			value: function superSearchLineSubmit(e) {
				e.preventDefault();
				var XHR = "onload" in new XMLHttpRequest() ? XMLHttpRequest : XDomainRequest;
				var r = new XHR();
				var data = {
					formId: this.id,
					query: this.superSearchLineInput.value
				};
				r.open("POST", this.remote);
				r.onload = function (response) {
					console.log(response);
				};
				r.onerror = function (error) {
					console.log("Ошибка: ", error);
				};
				r.send(data);
			}
		},
		superSearchLineResultGenerator: {
			value: function superSearchLineResultGenerator(protocol, domain, query) {
				var inputWidth = this.superSearchLineInput.offsetWidth;

				// Записываем текст в блоки результата и считаем их ширину
				this.linkTextEl1.innerHTML = protocol + domain + query;
				var linkStr1Width = this.stringWidthInPX(this.linkTextEl1);
				this.linkTextEl2.innerHTML = domain;
				var linkStr2Width = this.stringWidthInPX(this.linkTextEl2);
				this.linkTextEl3.innerHTML = domain + query;
				var linkStr3Width = this.stringWidthInPX(this.linkTextEl3);

				var superSearchLineResult = document.createElement("div");
				superSearchLineResult.setAttribute("class", this.baseClass + "__result");
				var helperFixedClass = "" + this.baseClass + "__helper--fixed";

				inputWidth - this.helperStr1Width < linkStr1Width ? this.helperEl1.classList.add(helperFixedClass) : this.helperEl1.classList.remove(helperFixedClass);
				inputWidth - this.helperStr2Width < linkStr2Width ? this.helperEl2.classList.add(helperFixedClass) : this.helperEl2.classList.remove(helperFixedClass);
				inputWidth - this.helperStr3Width < linkStr3Width ? this.helperEl3.classList.add(helperFixedClass) : this.helperEl3.classList.remove(helperFixedClass);

				var superSearchLineItems = "<div class=\"" + this.baseClass + "__item\">\n\t\t\t\t<a href=\"" + this.remote + "?suggestionType=phrase&query=" + (protocol + domain + query) + "\" target=\"_blank\" class=\"" + this.baseClass + "__link\">\n\t\t\t\t\t" + this.nodeToString(this.linkTextEl1) + "\n\t\t\t\t\t" + this.nodeToString(this.helperEl1) + "\n\t\t\t\t</a>\n\t\t\t\t\n\t\t\t</div>\n\t\t\t<div class=\"" + this.baseClass + "__item\">\n\t\t\t\t<a href=\"" + this.remote + "?suggestionType=domain&query=" + domain + "\" target=\"_blank\" class=\"" + this.baseClass + "__link\">\n\t\t\t\t\t" + this.nodeToString(this.linkTextEl2) + "\n\t\t\t\t\t" + this.nodeToString(this.helperEl2) + "\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t\t<div class=\"" + this.baseClass + "__item\">\n\t\t\t\t<a href=\"" + this.remote + "?suggestionType=url&query=" + (domain + query) + "\" target=\"_blank\" class=\"" + this.baseClass + "__link\">\n\t\t\t\t\t" + this.nodeToString(this.linkTextEl3) + "\n\t\t\t\t\t" + this.nodeToString(this.helperEl3) + "\n\t\t\t\t</a>\n\t\t\t</div>";
				superSearchLineResult.innerHTML = superSearchLineItems;
				return superSearchLineResult;
			}
		},
		superSearchLineInputHandler: {
			value: function superSearchLineInputHandler(e) {
				var value = e.target.value;
				var result = this.superSearchLineForm.querySelector(this.baseClassSelector + "__result");
				result && this.superSearchLineForm.removeChild(result);
				if (value !== null && value !== "") {
					this.superSearchLineReset.classList.remove("hidden");
					this.superSearchLineButton.removeAttribute("disabled");
					if (this.parseUrl(value)) {
						var _result = value.match(this.urlPattern);
						var protocol = _result[1];
						var domain = _result[2];
						var query = _result[3];
						var superSearchLineResult = this.superSearchLineResultGenerator(protocol, domain, query);
						console.log(true);
						this.superSearchLineForm.appendChild(superSearchLineResult);
					}
				} else {
					this.superSearchLineReset.classList.add("hidden");
					this.superSearchLineButton.setAttribute("disabled", "disabled");
				}
			}
		},
		stringWidthInPX: {
			value: function stringWidthInPX(el) {
				// дополнительные стили для клона, что бы мир не заметил чуда, и размеры отображались корректно
				var hiddenStyle = "left:-10000px;top:-10000px;height:auto;width:auto;position:absolute;";

				// создаем box элемент
				// для клонирования содержимого из нашего исходного inline блока
				var clone = document.createElement("div");

				// в обязательном порядке копируем стили с исходного элемента,
				// что бы размеры соответствовали исходнику.
				for (var i in el.style) {
					try {
						if (el.style[i] != "" && el.style[i].indexOf(":") > 0) {
							clone.style[i] = el.style[i];
						}
					} catch (e) {}
				}

				// устанавливаем стили у клона, дабы он не мозолил глаз.
				// Учитываем, что IE не позволяет напрямую устанавливать значение аттрибута style
				document.all ? clone.style.setAttribute("cssText", hiddenStyle) : clone.setAttribute("style", hiddenStyle);

				// Переносим содержимое. Аккуратно.
				clone.innerHTML = el.innerHTML;

				// Добавляем клон в корневой документ.
				// Так, на всякий пожарный в parent, а то вдруг элемент внутри iframe?
				parent.document.body.appendChild(clone);

				// Забиваем заветное.
				var width = clone.clientWidth;
				console.log(width);

				// ...и тут же удаляем
				parent.document.body.removeChild(clone);

				// Вот собственно говоря и все.
				return width;
			}
		},
		nodeToString: {
			value: function nodeToString(node) {
				var tmpNode = document.createElement("div");
				tmpNode.appendChild(node.cloneNode(true));
				var str = tmpNode.innerHTML;
				tmpNode = node = null;
				return str;
			}
		}
	});

	return SuperSearchLine;
})();

var init = (function () {
	var superSearchLines = document.querySelectorAll(".super-search-line");
	var i = 0;
	var _iteratorNormalCompletion = true;
	var _didIteratorError = false;
	var _iteratorError = undefined;

	try {
		for (var _iterator = superSearchLines[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
			var superSearchLine = _step.value;

			superSearchLine.setAttribute("id", "superSeachLine" + i++);
			new SuperSearchLine(superSearchLine);
		}
	} catch (err) {
		_didIteratorError = true;
		_iteratorError = err;
	} finally {
		try {
			if (!_iteratorNormalCompletion && _iterator["return"]) {
				_iterator["return"]();
			}
		} finally {
			if (_didIteratorError) {
				throw _iteratorError;
			}
		}
	}
})(function () {
	document.addEventListener("DOMContentLoaded", init);
});

},{}]},{},["./src/js/app.js"])("./src/js/app.js")
});
//# sourceMappingURL=data:application/json;base64,
